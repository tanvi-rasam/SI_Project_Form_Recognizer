{"version":3,"file":"transforms.js","sourceRoot":"","sources":["../../src/transforms.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport {\n  AnalyzeResult as AnalyzeResultModel,\n  DataTable as DataTableModel,\n  DocumentResult as DocumentResultModel,\n  FieldValue as FieldValueModel,\n  KeyValueElement as KeyValueElementModel,\n  KeyValuePair as KeyValuePairModel,\n  PageResult as PageResultModel,\n  ReadResult as ReadResultModel,\n  TextLine as TextLineModel,\n  GeneratedClientGetAnalyzeFormResultResponse as GetAnalyzeFormResultResponse,\n  GeneratedClientGetAnalyzeReceiptResultResponse as GetAnalyzeReceiptResultResponse,\n  GeneratedClientGetAnalyzeLayoutResultResponse as GetAnalyzeLayoutResultResponse,\n  GeneratedClientGetCustomModelResponse as GetCustomModelResponse\n} from \"./generated/models\";\n\nimport {\n  FormPage,\n  FormLine,\n  FormElement,\n  FormTable,\n  RecognizedForm,\n  FieldData,\n  FormField,\n  Point2D,\n  FormModelResponse,\n  CustomFormModelField,\n  CustomFormSubmodel\n} from \"./models\";\nimport { RecognizeFormResultResponse, RecognizeContentResultResponse } from \"./internalModels\";\n\nexport function toBoundingBox(original: number[]): Point2D[] {\n  return [\n    { x: original[0], y: original[1] },\n    { x: original[2], y: original[3] },\n    { x: original[4], y: original[5] },\n    { x: original[6], y: original[7] }\n  ];\n}\n\nexport function toTextLine(original: TextLineModel, pageNumber: number): FormLine {\n  const line: FormLine = {\n    kind: \"line\",\n    pageNumber: pageNumber,\n    text: original.text,\n    boundingBox: toBoundingBox(original.boundingBox),\n    words: original.words.map((w) => {\n      return {\n        kind: \"word\",\n        text: w.text,\n        boundingBox: toBoundingBox(w.boundingBox),\n        confidence: w.confidence || 1,\n        pageNumber: pageNumber\n      };\n    })\n  };\n\n  return line;\n}\n\nexport function toFormPage(original: ReadResultModel): FormPage {\n  return {\n    pageNumber: original.pageNumber,\n    textAngle: original.angle,\n    width: original.width,\n    height: original.height,\n    unit: original.unit,\n    lines: original.lines?.map((l) => toTextLine(l, original.pageNumber))\n  };\n}\n\n// Note: might need to support other element types in future, e.g., checkbox\nconst textPattern = /\\/readResults\\/(\\d+)\\/lines\\/(\\d+)(?:\\/words\\/(\\d+))?/;\n\nexport function toFormContent(element: string, readResults: FormPage[]): FormElement {\n  const result = textPattern.exec(element);\n  if (!result || !result[0] || !result[1] || !result[2]) {\n    throw new Error(`Unexpected element reference encountered: ${element}`);\n  }\n\n  const readIndex = Number.parseInt(result[1]);\n  const lineIndex = Number.parseInt(result[2]);\n  if (result[3]) {\n    const wordIndex = Number.parseInt(result[3]);\n    return readResults[readIndex].lines![lineIndex].words[wordIndex];\n  } else {\n    return readResults[readIndex].lines![lineIndex];\n  }\n}\n\nexport function toFieldData(\n  pageNumber: number,\n  original: KeyValueElementModel,\n  readResults?: FormPage[]\n): FieldData {\n  return {\n    pageNumber,\n    text: original.text,\n    boundingBox: original.boundingBox ? toBoundingBox(original.boundingBox) : undefined,\n    fieldElements: original.elements?.map((element) => toFormContent(element, readResults!))\n  };\n}\n\nexport function toFormFieldFromKeyValuePairModel(\n  pageNumber: number,\n  original: KeyValuePairModel,\n  readResults?: FormPage[]\n): FormField {\n  return {\n    name: original.label,\n    confidence: original.confidence || 1,\n    labelData: toFieldData(pageNumber, original.key, readResults),\n    valueData: toFieldData(pageNumber, original.value, readResults),\n    value: original.value.text,\n    valueType: \"string\"\n  };\n}\n\nexport function toFormTable(\n  original: DataTableModel,\n  readResults: FormPage[],\n  pageNumber: number\n): FormTable {\n  return {\n    rowCount: original.rows,\n    columnCount: original.columns,\n    cells: original.cells.map((cell) => ({\n      boundingBox: toBoundingBox(cell.boundingBox),\n      columnIndex: cell.columnIndex,\n      fieldElements: cell.elements?.map((element) => toFormContent(element, readResults)),\n      rowIndex: cell.rowIndex,\n      columnSpan: cell.columnSpan ?? 1,\n      rowSpan: cell.rowSpan ?? 1,\n      isHeader: cell.isHeader ?? false,\n      isFooter: cell.isFooter ?? false,\n      confidence: cell.confidence ?? 1,\n      text: cell.text,\n      pageNumber\n    })),\n    pageNumber\n  };\n}\n\nexport function toFormPages(\n  readResults?: ReadResultModel[],\n  pageResults?: PageResultModel[]\n): FormPage[] {\n  const transformed = readResults?.map(toFormPage);\n  // maps from page numbers to the objects\n  const readMap = new Map<number, FormPage>(transformed?.map((r) => [r.pageNumber, r]));\n  const pageMap = new Map<number, PageResultModel>(pageResults?.map((r) => [r.pageNumber, r]));\n  const result = [];\n  for (const pageNumber of readMap.keys()) {\n    const readResult = readMap.get(pageNumber);\n    if (readResult) {\n      const pageResult = pageMap.get(pageNumber);\n      if (pageResult) {\n        readResult.tables = pageResult.tables?.map((table) =>\n          toFormTable(table, transformed!, pageNumber)\n        );\n        result.push(readResult);\n      }\n    }\n  }\n\n  return result;\n}\n\nexport function toRecognizeFormResultResponse(\n  original: GetAnalyzeFormResultResponse\n): RecognizeFormResultResponse {\n  const pages = toFormPages(\n    original.analyzeResult?.readResults,\n    original.analyzeResult?.pageResults\n  );\n  const common = {\n    status: original.status,\n    createdOn: original.createdOn,\n    errors: original.analyzeResult?.errors,\n    lastModified: original.lastModified,\n    _response: original._response\n  };\n\n  if (original.status !== \"succeeded\") {\n    return common;\n  }\n\n  const additional = original.analyzeResult\n    ? {\n        version: original.analyzeResult.version,\n        forms:\n          original.analyzeResult.documentResults &&\n          original.analyzeResult.documentResults.length > 0\n            ? original.analyzeResult.documentResults.map((d) => toRecognizedForm(d, pages)) // supervised\n            : original.analyzeResult.pageResults?.map((p) => toFormFromPageResult(p, pages)) // unsupervised\n      }\n    : undefined;\n  return {\n    ...common,\n    ...additional\n  };\n}\n\nexport function toFormFieldFromFieldValueModel(\n  original: FieldValueModel,\n  key: string,\n  readResults: FormPage[]\n): FormField {\n  let value:\n    | string\n    | Date\n    | number\n    | FormField[]\n    | { [propertyName: string]: FormField }\n    | undefined;\n  switch (original.type) {\n    case \"string\":\n      value = original.valueString;\n      break;\n    case \"date\":\n      value = original.valueDate;\n      break;\n    case \"time\":\n      value = original.valueTime;\n      break;\n    case \"integer\":\n      value = original.valueInteger;\n      break;\n    case \"number\":\n      value = original.valueNumber;\n      break;\n    case \"phoneNumber\":\n      value = original.valuePhoneNumber;\n      break;\n    case \"array\":\n      value = original.valueArray?.map((fieldValueModel) =>\n        toFormFieldFromFieldValueModel(fieldValueModel, key, readResults)\n      );\n      break;\n    case \"object\":\n      value = original.valueObject\n        ? toFieldsFromFieldValue(original.valueObject, readResults)\n        : undefined;\n      break;\n  }\n  return {\n    confidence: original.confidence || 1,\n    name: key,\n    valueData: {\n      pageNumber: original.pageNumber ?? 0,\n      text: original.text,\n      boundingBox: original.boundingBox ? toBoundingBox(original.boundingBox) : undefined,\n      fieldElements: original.elements?.map((element) => toFormContent(element, readResults))\n    },\n    valueType: original.type,\n    value\n  } as FormField;\n}\n\nexport function toFieldsFromFieldValue(\n  original: { [propertyName: string]: FieldValueModel | null },\n  readResults: FormPage[]\n): { [propertyName: string]: FormField } {\n  const result: { [propertyName: string]: FormField } = {};\n  for (const key in original) {\n    // eslint-disable-next-line no-prototype-builtins\n    if (original.hasOwnProperty(key)) {\n      if (!original[key]) {\n        result[key] = { name: key };\n        continue;\n      }\n      const formField = toFormFieldFromFieldValueModel(original[key]!, key, readResults);\n      result[key] = formField;\n    }\n  }\n\n  return result;\n}\n\nexport function toFieldsFromKeyValuePairs(\n  pageNumber: number,\n  original: KeyValuePairModel[],\n  pages: FormPage[]\n): { [propertyName: string]: FormField } {\n  const result: { [propertyName: string]: FormField } = {};\n  for (let i = 0; i < original.length; i++) {\n    const pair = original[i];\n    const stringField = toFormFieldFromKeyValuePairModel(pageNumber, pair, pages);\n    stringField.name = stringField.name || `field-${i}`;\n\n    result[`field-${i}`] = stringField;\n  }\n\n  return result;\n}\n\nexport function toFormFromPageResult(original: PageResultModel, pages: FormPage[]): RecognizedForm {\n  return {\n    formType: `form-${original.clusterId}`,\n    pageRange: { firstPageNumber: original.pageNumber, lastPageNumber: original.pageNumber },\n    pages: pages.filter((p) => p.pageNumber === original.pageNumber),\n    fields: original.keyValuePairs\n      ? toFieldsFromKeyValuePairs(original.pageNumber, original.keyValuePairs, pages)\n      : {}\n  };\n}\n\nexport function toRecognizedForm(original: DocumentResultModel, pages: FormPage[]): RecognizedForm {\n  return {\n    formType: original.docType,\n    pageRange: { firstPageNumber: original.pageRange[0], lastPageNumber: original.pageRange[1] },\n    fields: toFieldsFromFieldValue(original.fields, pages),\n    pages: pages.filter(\n      (p) => original.pageRange[0] <= p.pageNumber && p.pageNumber <= original.pageRange[1]\n    )\n  };\n}\n\nexport function toRecognizeContentResultResponse(\n  original: GetAnalyzeLayoutResultResponse\n): RecognizeContentResultResponse {\n  function toRecognizeContentResult(\n    model?: AnalyzeResultModel\n  ): { version?: string; pages?: FormPage[] } | undefined {\n    if (!model) {\n      return undefined;\n    }\n    const pages = toFormPages(model.readResults, model.pageResults);\n    return {\n      version: model.version,\n      pages: pages\n    };\n  }\n\n  const common = {\n    status: original.status,\n    createdOn: original.createdOn,\n    errors: original.analyzeResult?.errors,\n    lastModified: original.lastModified,\n    _response: original._response\n  };\n  if (original.status === \"succeeded\") {\n    return {\n      ...common,\n      ...toRecognizeContentResult(original.analyzeResult)\n    };\n  } else {\n    return common;\n  }\n}\n\nexport function toRecognizeFormResultResponseFromReceipt(\n  original: GetAnalyzeReceiptResultResponse\n): RecognizeFormResultResponse {\n  const common = {\n    status: original.status,\n    createdOn: original.createdOn,\n    errors: original.analyzeResult?.errors,\n    lastModified: original.lastModified,\n    _response: original._response\n  };\n  if (original.status !== \"succeeded\") {\n    return common;\n  }\n\n  if (!original.analyzeResult) {\n    throw new Error(\"Expecting valid analyzeResult from the service response\");\n  }\n\n  const pages = original.analyzeResult!.readResults.map(toFormPage);\n  return {\n    ...common,\n    version: original.analyzeResult!.version,\n    forms: original\n      .analyzeResult!.documentResults!.filter((d) => {\n        return !!d.fields;\n      })\n      .map((d) => {\n        if (d.docType !== \"prebuilt:receipt\") {\n          throw new RangeError(\"The document type is not 'prebuilt:receipt'\");\n        }\n        return toRecognizedForm(d, pages);\n      })\n  };\n}\n\nexport function toFormModelResponse(response: GetCustomModelResponse): FormModelResponse {\n  const common = {\n    ...response.modelInfo,\n    trainingDocuments: response.trainResult?.trainingDocuments,\n    errors: response.trainResult?.errors,\n    _response: response._response\n  };\n\n  if (response.modelInfo.status !== \"ready\") {\n    return common;\n  }\n\n  if (response.trainResult?.averageModelAccuracy || response.trainResult?.fields) {\n    // training with forms and labels, populate from trainingResult.fields\n    const fields: Record<string, CustomFormModelField> = {};\n    for (const f of response.trainResult.fields!) {\n      fields[f.fieldName] = { name: f.fieldName, accuracy: f.accuracy, label: null };\n    }\n    return {\n      ...common,\n      submodels: [\n        {\n          accuracy: response.trainResult.averageModelAccuracy,\n          formType: `form-${response.modelInfo.modelId}`,\n          fields\n        }\n      ]\n    };\n  } else if (response.keys) {\n    // training with forms, populate from trainingResult.keys\n    const submodels: CustomFormSubmodel[] = [];\n    for (const clusterKey in response.keys.clusters) {\n      const cluster = response.keys.clusters[clusterKey];\n      const fields: Record<string, CustomFormModelField> = {};\n\n      for (let i = 0; i < cluster.length; i++) {\n        fields[`field-${i}`] = { name: `field-${i}`, label: cluster[i] };\n      }\n      submodels.push({ formType: `form-${clusterKey}`, fields });\n    }\n\n    return {\n      ...common,\n      submodels\n    };\n  } else {\n    throw new Error(\"Expecting model(s) from traning result but got none\");\n  }\n}\n"]}